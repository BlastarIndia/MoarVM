# This file is generated from src/core/oplist by tools/update_ops.p6.


class MAST::Ops {}
BEGIN {
    MAST::Ops.WHO<@offsets> := nqp::list_i(0,0,1,3,5,7,9,11,13,15,17,19,21,23,25,27,29,31,33,35,37,39,41,43,45,47,49,51,53,55,57,59,61,63,65,67,69,71,73,75,76,77,78,79,79,81,83,85,87,89,91,93,96,99,102,105,108,111,114,116,118,119,120,121,122,124,125,127,129,131,133,134,136,138,140,142,145,148,151,154,156,158,161,164,167,170,173,176,179,182,185,188,191,194,196,198,200,202,204,206,208,210,213,216,219,222,224,226,228,230,233,236,239,242,244,246,249,252,255,257,260,263,266,269,271,273,275,277,279,281,283,285,287,289,291,293,294,296,299,302,304,308,309,310,311,313,315,317,319,321,323,325,327,329,331,333,335,337,339,341,344,345,346,348,351,354,357,360,363,366,370,373,376,378,380,382,384,386,388,391,394,396,398,400,401,402,405,408,412,416,418,420,423,426,430,436,439,442,444,446,448,451,454,457,460,463,466,469,472,476,478,482,484,487,492,497,504,511,513,515,517,520,524,526,528,532,537,542,545,549,555,556,559,562,565,568,571,576,580,582,584,586,588,590,592,595,597,599,601,603,605,607,609,612,615,619,623,627,631,635,638,641,642,643,646,649,652,655,658,661,664,666,670,674,678,681,685,689,694,698,702,707,710,713,715,717,719,722,725,728,730,733,739,742,744,746,747,750,753,756,759,761,763,765,768,771,774,777,780,783,786,789,792,794,796,799,801,803,806,809,812,815,818,821,824,827,829,831,833,835,837,839,841,843,845,847,849,851,853,855,857,859,863,865,868,871,874,876,878,880,885,890,895,900,904,908,912,916,921,926,931,936,940,944,948,952,954,955,957,958,960,962,963,964,965,966,967,969,970,971,972,974,975,978,980,982,984,986,988,990,993,995,997,999,1003,1005,1007,1009,1012,1014,1016,1018,1020,1022,1024,1026,1028,1030,1033,1035,1038,1040,1043,1046,1049,1050,1052,1054,1056,1057,1058,1059,1060,1061,1062,1063,1067,1070,1073,1076,1078,1079,1080,1082,1084,1086,1088,1090,1091,1093,1095,1097,1098,1100,1102,1103,1106,1107,1110,1113,1116,1119,1122,1127,1130,1133,1134,1135,1137,1139,1140,1141,1142,1147,1148,1153,1155,1157,1162,1167,1170,1173,1175,1177,1179,1181,1183,1184,1185,1187,1189,1192,1194,1197,1199,1201,1203,1205,1207,1209,1211,1211,1211,1212,1213,1214,1215,1216,1219,1220,1221,1222,1224,1225,1227,1229,1231,1234,1237,1240,1242,1245,1247,1249,1251,1253,1256,1262,1265,1268,1269,1270,1271,1272);
    MAST::Ops.WHO<@counts> := nqp::list_i(0,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,0,2,2,2,2,2,2,2,3,3,3,3,3,3,3,2,2,1,1,1,1,2,1,2,2,2,2,1,2,2,2,2,3,3,3,3,2,2,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,2,2,2,2,2,3,3,3,3,2,2,2,2,3,3,3,3,2,2,3,3,3,2,3,3,3,3,2,2,2,2,2,2,2,2,2,2,2,2,1,2,3,3,2,4,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,1,1,2,3,3,3,3,3,3,4,3,3,2,2,2,2,2,2,3,3,2,2,2,1,1,3,3,4,4,2,2,3,3,4,6,3,3,2,2,2,3,3,3,3,3,3,3,3,4,2,4,2,3,5,5,7,7,2,2,2,3,4,2,2,4,5,5,3,4,6,1,3,3,3,3,3,5,4,2,2,2,2,2,2,3,2,2,2,2,2,2,2,3,3,4,4,4,4,4,3,3,1,1,3,3,3,3,3,3,3,2,4,4,4,3,4,4,5,4,4,5,3,3,2,2,2,3,3,3,2,3,6,3,2,2,1,3,3,3,3,2,2,2,3,3,3,3,3,3,3,3,3,2,2,3,2,2,3,3,3,3,3,3,3,3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,4,2,3,3,3,2,2,2,5,5,5,5,4,4,4,4,5,5,5,5,4,4,4,4,2,1,2,1,2,2,1,1,1,1,1,2,1,1,1,2,1,3,2,2,2,2,2,2,3,2,2,2,4,2,2,2,3,2,2,2,2,2,2,2,2,2,3,2,3,2,3,3,3,1,2,2,2,1,1,1,1,1,1,1,4,3,3,3,2,1,1,2,2,2,2,2,1,2,2,2,1,2,2,1,3,1,3,3,3,3,3,5,3,3,1,1,2,2,1,1,1,5,1,5,2,2,5,5,3,3,2,2,2,2,2,1,1,2,2,3,2,3,2,2,2,2,2,2,2,0,0,1,1,1,1,1,3,1,1,1,2,1,2,2,2,3,3,3,2,3,2,2,2,2,3,6,3,3,1,1,1,1,2);
    MAST::Ops.WHO<@values> := nqp::list_i(72,33,72,33,72,49,72,49,72,57,72,57,72,57,72,57,72,65,72,65,72,82,81,34,9,34,17,34,25,34,9,34,17,34,25,10,33,18,33,26,33,10,33,18,33,26,33,50,41,42,49,82,83,84,81,34,56,50,56,58,56,66,56,56,33,56,49,56,57,56,65,66,57,57,65,33,49,57,65,10,8,18,16,26,24,34,32,42,40,50,48,58,56,34,33,33,34,33,33,34,33,33,34,33,33,34,33,33,34,33,33,34,33,33,34,33,34,33,34,34,34,34,66,96,104,16,33,16,49,16,57,16,65,65,34,65,50,65,58,65,66,65,50,49,49,50,49,49,50,49,49,50,49,49,50,49,50,49,34,33,33,34,33,33,34,33,33,34,33,33,34,33,33,34,33,33,34,49,49,34,49,49,34,49,49,34,49,49,34,49,49,34,49,49,16,32,16,48,16,56,16,16,34,16,50,16,58,16,66,16,34,16,72,50,16,72,58,16,72,66,16,72,34,56,50,56,58,56,66,56,34,56,72,50,56,72,58,56,72,66,56,72,50,33,34,49,34,33,33,34,33,33,34,33,33,34,33,34,33,33,34,33,33,34,33,33,50,49,49,66,65,32,33,66,33,66,57,57,65,58,33,58,49,34,57,50,57,50,65,58,65,66,16,66,65,72,34,33,33,34,49,49,34,33,65,56,65,16,66,65,66,65,57,65,65,65,33,58,65,66,65,34,65,66,65,66,65,66,65,66,32,66,32,66,32,66,57,66,72,66,65,50,49,49,66,66,34,65,66,65,33,34,65,33,50,65,33,58,65,33,34,65,33,66,65,65,66,65,65,65,66,65,65,34,65,57,34,49,34,49,65,65,65,65,34,65,66,65,65,65,57,66,65,65,34,65,66,65,66,65,33,65,58,57,57,58,57,33,58,57,33,33,34,57,57,33,34,57,34,57,34,57,57,34,57,57,34,57,57,33,34,57,33,33,57,33,34,57,33,34,57,33,58,57,58,57,58,57,58,65,33,66,57,33,58,57,33,66,65,33,58,65,33,66,57,33,66,57,57,58,57,65,58,57,57,57,34,57,57,33,56,72,34,57,34,33,57,34,57,33,33,33,34,57,33,16,16,58,57,33,33,57,33,33,58,57,33,33,57,33,33,34,57,58,33,34,57,34,57,33,34,57,57,33,58,57,58,57,34,33,57,33,34,33,57,33,33,34,33,57,33,33,66,65,65,66,65,57,33,65,57,33,65,65,65,57,34,57,57,34,57,57,34,57,57,34,57,57,34,57,57,66,33,57,33,33,34,57,57,33,50,49,50,49,50,49,50,49,50,49,50,49,50,49,50,50,49,50,49,50,49,50,49,50,49,50,49,50,49,34,33,33,34,33,33,66,65,65,65,66,65,65,65,66,65,65,65,66,65,65,65,66,65,65,65,66,65,65,66,65,65,66,66,34,65,65,34,65,65,34,65,65,34,65,65,34,65,65,34,65,65,34,65,65,34,65,66,65,65,65,66,65,65,65,66,65,65,65,66,65,65,66,65,33,65,66,65,33,65,66,65,65,65,65,66,65,65,65,66,65,65,65,66,65,65,65,65,34,65,33,66,65,65,34,65,50,65,58,65,66,33,65,66,49,65,66,57,65,34,65,58,65,33,66,33,57,33,33,65,50,65,65,50,49,50,49,66,66,65,56,66,65,57,34,65,56,34,65,57,66,65,66,65,66,65,34,65,57,50,65,57,58,65,57,66,65,57,65,57,33,65,57,49,65,57,57,65,57,65,34,65,57,65,57,34,65,34,65,65,58,65,34,65,34,65,33,50,65,33,58,65,33,66,65,33,65,33,33,65,33,49,65,33,57,65,33,65,65,33,65,49,65,57,65,65,34,65,50,65,58,65,66,65,34,65,50,65,58,65,66,65,65,33,65,49,65,57,65,65,65,65,33,33,65,33,66,33,65,66,49,65,66,57,65,34,65,50,65,58,65,65,65,56,33,16,65,65,56,49,16,65,65,56,57,16,65,65,56,65,16,65,65,57,33,65,65,57,49,65,65,57,57,65,65,57,65,34,65,65,56,16,50,65,65,56,16,58,65,65,56,16,66,65,65,56,16,34,65,65,57,50,65,65,57,58,65,65,57,66,65,65,57,34,65,66,34,65,66,66,65,34,57,66,66,66,66,66,57,65,66,66,66,34,65,58,66,65,57,34,65,34,65,66,65,58,65,66,65,58,65,66,65,65,65,65,65,33,65,65,65,65,57,65,34,65,34,65,66,65,65,33,65,34,65,34,65,34,57,34,57,66,65,65,65,65,57,65,65,66,57,66,57,65,66,57,66,57,65,66,65,66,65,65,66,65,65,34,65,65,66,66,65,66,65,66,65,66,66,66,66,66,66,66,34,65,65,57,65,57,65,34,65,33,66,57,57,66,65,65,65,66,65,58,65,57,57,57,57,57,57,57,57,33,34,57,57,33,57,66,57,58,65,65,66,57,57,65,58,65,33,66,65,33,58,57,57,57,57,57,34,65,57,34,65,65,33,33,65,33,33,34,65,33,65,65,65,33,34,65,66,66,66,66,57,33,33,33,65,66,57,33,33,33,65,33,66,65,34,65,57,33,33,34,65,65,33,33,58,65,33,66,65,33,66,65,66,57,58,57,58,33,65,57,57,57,58,65,34,65,34,57,33,58,65,58,65,57,66,57,66,57,66,57,66,57,33,33,34,33,34,33,57,34,50,34,66,66,65,65,65,50,33,58,57,66,65,57,58,57,66,57,65,33,65,65,33,65,66,65,33,58,65,34,65,65,65,57,34,65,65,65,66,65,58,65,65,58,57,65,65,65,65,66,16,16,66,16,32,66,66,65,66,58,65);
    MAST::Ops.WHO<%codes> := nqp::hash('no_op', 0,
        'goto', 1,
        'if_i', 2,
        'unless_i', 3,
        'if_n', 4,
        'unless_n', 5,
        'if_s', 6,
        'unless_s', 7,
        'if_s0', 8,
        'unless_s0', 9,
        'if_o', 10,
        'unless_o', 11,
        'set', 12,
        'extend_u8', 13,
        'extend_u16', 14,
        'extend_u32', 15,
        'extend_i8', 16,
        'extend_i16', 17,
        'extend_i32', 18,
        'trunc_u8', 19,
        'trunc_u16', 20,
        'trunc_u32', 21,
        'trunc_i8', 22,
        'trunc_i16', 23,
        'trunc_i32', 24,
        'extend_n32', 25,
        'trunc_n32', 26,
        'getlex', 27,
        'bindlex', 28,
        'getlex_ni', 29,
        'getlex_nn', 30,
        'getlex_ns', 31,
        'getlex_no', 32,
        'bindlex_ni', 33,
        'bindlex_nn', 34,
        'bindlex_ns', 35,
        'bindlex_no', 36,
        'getlex_ng', 37,
        'bindlex_ng', 38,
        'return_i', 39,
        'return_n', 40,
        'return_s', 41,
        'return_o', 42,
        'return', 43,
        'const_i8', 44,
        'const_i16', 45,
        'const_i32', 46,
        'const_i64', 47,
        'const_n32', 48,
        'const_n64', 49,
        'const_s', 50,
        'add_i', 51,
        'sub_i', 52,
        'mul_i', 53,
        'div_i', 54,
        'div_u', 55,
        'mod_i', 56,
        'mod_u', 57,
        'neg_i', 58,
        'abs_i', 59,
        'inc_i', 60,
        'inc_u', 61,
        'dec_i', 62,
        'dec_u', 63,
        'getcode', 64,
        'prepargs', 65,
        'arg_i', 66,
        'arg_n', 67,
        'arg_s', 68,
        'arg_o', 69,
        'invoke_v', 70,
        'invoke_i', 71,
        'invoke_n', 72,
        'invoke_s', 73,
        'invoke_o', 74,
        'add_n', 75,
        'sub_n', 76,
        'mul_n', 77,
        'div_n', 78,
        'neg_n', 79,
        'abs_n', 80,
        'eq_i', 81,
        'ne_i', 82,
        'lt_i', 83,
        'le_i', 84,
        'gt_i', 85,
        'ge_i', 86,
        'eq_n', 87,
        'ne_n', 88,
        'lt_n', 89,
        'le_n', 90,
        'gt_n', 91,
        'ge_n', 92,
        'argconst_i', 93,
        'argconst_n', 94,
        'argconst_s', 95,
        'checkarity', 96,
        'param_rp_i', 97,
        'param_rp_n', 98,
        'param_rp_s', 99,
        'param_rp_o', 100,
        'param_op_i', 101,
        'param_op_n', 102,
        'param_op_s', 103,
        'param_op_o', 104,
        'param_rn_i', 105,
        'param_rn_n', 106,
        'param_rn_s', 107,
        'param_rn_o', 108,
        'param_on_i', 109,
        'param_on_n', 110,
        'param_on_s', 111,
        'param_on_o', 112,
        'coerce_in', 113,
        'coerce_ni', 114,
        'band_i', 115,
        'bor_i', 116,
        'bxor_i', 117,
        'bnot_i', 118,
        'blshift_i', 119,
        'brshift_i', 120,
        'pow_i', 121,
        'pow_n', 122,
        'takeclosure', 123,
        'jumplist', 124,
        'caller', 125,
        'getdynlex', 126,
        'binddynlex', 127,
        'coerce_is', 128,
        'coerce_ns', 129,
        'coerce_si', 130,
        'coerce_sn', 131,
        'smrt_numify', 132,
        'smrt_strify', 133,
        'param_sp', 134,
        'param_sn', 135,
        'ifnonnull', 136,
        'cmp_i', 137,
        'cmp_n', 138,
        'not_i', 139,
        'setlexvalue', 140,
        'exception', 141,
        'handled', 142,
        'newexception', 143,
        'bindexmessage', 144,
        'bindexpayload', 145,
        'bindexcategory', 146,
        'getexmessage', 147,
        'getexpayload', 148,
        'getexcategory', 149,
        'throwdyn', 150,
        'throwlex', 151,
        'throwlexotic', 152,
        'throwcatdyn', 153,
        'throwcatlex', 154,
        'throwcatlexotic', 155,
        'die', 156,
        'newlexotic', 157,
        'lexoticresult', 158,
        'mod_n', 159,
        'usecapture', 160,
        'savecapture', 161,
        'captureposelems', 162,
        'captureposarg', 163,
        'captureposarg_i', 164,
        'captureposarg_n', 165,
        'captureposarg_s', 166,
        'captureposprimspec', 167,
        'invokewithcapture', 168,
        'multicacheadd', 169,
        'multicachefind', 170,
        'lexprimspec', 171,
        'ceil_n', 172,
        'floor_n', 173,
        'assign', 174,
        'assignunchecked', 175,
        'objprimspec', 176,
        'backtracestrings', 177,
        'masttofile', 178,
        'masttocu', 179,
        'iscompunit', 180,
        'compunitmainline', 181,
        'compunitcodes', 182,
        'sleep', 183,
        'say_I', 184,
        'concat_s', 185,
        'repeat_s', 186,
        'substr_s', 187,
        'index_s', 188,
        'graphs_s', 189,
        'codes_s', 190,
        'eq_s', 191,
        'ne_s', 192,
        'eqat_s', 193,
        'haveat_s', 194,
        'getcp_s', 195,
        'indexcp_s', 196,
        'uc', 197,
        'lc', 198,
        'tc', 199,
        'buftostr', 200,
        'strtobuf', 201,
        'decode_s', 202,
        'decode_b', 203,
        'decode', 204,
        'encode', 205,
        'split', 206,
        'join', 207,
        'replace', 208,
        'getcpbyname', 209,
        'indexat_scb', 210,
        'unipropcode', 211,
        'unipvalcode', 212,
        'hasuniprop', 213,
        'hasunipropc', 214,
        'concatr_s', 215,
        'splice_s', 216,
        'chars', 217,
        'chr', 218,
        'ordfirst', 219,
        'ordat', 220,
        'rindexfrom', 221,
        'escape', 222,
        'flip', 223,
        'iscclass', 224,
        'findcclass', 225,
        'findnotcclass', 226,
        'nfafromstatelist', 227,
        'nfarunproto', 228,
        'nfarunalt', 229,
        'flattenropes', 230,
        'gt_s', 231,
        'ge_s', 232,
        'lt_s', 233,
        'le_s', 234,
        'cmp_s', 235,
        'radix', 236,
        'eqatic_s', 237,
        'sin_n', 238,
        'asin_n', 239,
        'cos_n', 240,
        'acos_n', 241,
        'tan_n', 242,
        'atan_n', 243,
        'atan2_n', 244,
        'sec_n', 245,
        'asec_n', 246,
        'sinh_n', 247,
        'cosh_n', 248,
        'tanh_n', 249,
        'sech_n', 250,
        'sqrt_n', 251,
        'gcd_i', 252,
        'lcm_i', 253,
        'add_I', 254,
        'sub_I', 255,
        'mul_I', 256,
        'div_I', 257,
        'mod_I', 258,
        'neg_I', 259,
        'abs_I', 260,
        'inc_I', 261,
        'dec_I', 262,
        'cmp_I', 263,
        'eq_I', 264,
        'ne_I', 265,
        'lt_I', 266,
        'le_I', 267,
        'gt_I', 268,
        'ge_I', 269,
        'not_I', 270,
        'bor_I', 271,
        'bxor_I', 272,
        'band_I', 273,
        'bnot_I', 274,
        'blshift_I', 275,
        'brshift_I', 276,
        'pow_I', 277,
        'gcd_I', 278,
        'lcm_I', 279,
        'expmod_I', 280,
        'isprime_I', 281,
        'rand_I', 282,
        'coerce_Ii', 283,
        'coerce_In', 284,
        'coerce_Is', 285,
        'coerce_iI', 286,
        'coerce_nI', 287,
        'coerce_sI', 288,
        'isbig_I', 289,
        'base_I', 290,
        'radix_I', 291,
        'div_In', 292,
        'log_n', 293,
        'exp_n', 294,
        'knowhow', 295,
        'findmeth', 296,
        'findmeth_s', 297,
        'can', 298,
        'can_s', 299,
        'create', 300,
        'gethow', 301,
        'getwhat', 302,
        'atkey_i', 303,
        'atkey_n', 304,
        'atkey_s', 305,
        'atkey_o', 306,
        'bindkey_i', 307,
        'bindkey_n', 308,
        'bindkey_s', 309,
        'bindkey_o', 310,
        'existskey', 311,
        'deletekey', 312,
        'getwhere', 313,
        'eqaddr', 314,
        'reprname', 315,
        'isconcrete', 316,
        'atpos_i', 317,
        'atpos_n', 318,
        'atpos_s', 319,
        'atpos_o', 320,
        'bindpos_i', 321,
        'bindpos_n', 322,
        'bindpos_s', 323,
        'bindpos_o', 324,
        'push_i', 325,
        'push_n', 326,
        'push_s', 327,
        'push_o', 328,
        'pop_i', 329,
        'pop_n', 330,
        'pop_s', 331,
        'pop_o', 332,
        'shift_i', 333,
        'shift_n', 334,
        'shift_s', 335,
        'shift_o', 336,
        'unshift_i', 337,
        'unshift_n', 338,
        'unshift_s', 339,
        'unshift_o', 340,
        'splice', 341,
        'setelemspos', 342,
        'box_i', 343,
        'box_n', 344,
        'box_s', 345,
        'unbox_i', 346,
        'unbox_n', 347,
        'unbox_s', 348,
        'bindattr_i', 349,
        'bindattr_n', 350,
        'bindattr_s', 351,
        'bindattr_o', 352,
        'bindattrs_i', 353,
        'bindattrs_n', 354,
        'bindattrs_s', 355,
        'bindattrs_o', 356,
        'getattr_i', 357,
        'getattr_n', 358,
        'getattr_s', 359,
        'getattr_o', 360,
        'getattrs_i', 361,
        'getattrs_n', 362,
        'getattrs_s', 363,
        'getattrs_o', 364,
        'isnull', 365,
        'knowhowattr', 366,
        'iscoderef', 367,
        'null', 368,
        'clone', 369,
        'isnull_s', 370,
        'bootint', 371,
        'bootnum', 372,
        'bootstr', 373,
        'bootarray', 374,
        'boothash', 375,
        'sethllconfig', 376,
        'hllboxtype_i', 377,
        'hllboxtype_n', 378,
        'hllboxtype_s', 379,
        'elems', 380,
        'null_s', 381,
        'newtype', 382,
        'islist', 383,
        'ishash', 384,
        'iter', 385,
        'iterkey_s', 386,
        'iterval', 387,
        'getcodename', 388,
        'composetype', 389,
        'setmethcache', 390,
        'setmethcacheauth', 391,
        'settypecache', 392,
        'setinvokespec', 393,
        'isinvokable', 394,
        'iscont', 395,
        'decont', 396,
        'setboolspec', 397,
        'istrue', 398,
        'isfalse', 399,
        'istrue_s', 400,
        'isfalse_s', 401,
        'getcodeobj', 402,
        'setcodeobj', 403,
        'setcodename', 404,
        'forceouterctx', 405,
        'getcomp', 406,
        'bindcomp', 407,
        'getcurhllsym', 408,
        'bindcurhllsym', 409,
        'getwho', 410,
        'setwho', 411,
        'rebless', 412,
        'istype', 413,
        'ctx', 414,
        'ctxouter', 415,
        'ctxcaller', 416,
        'ctxlexpad', 417,
        'curcode', 418,
        'callercode', 419,
        'bootintarray', 420,
        'bootnumarray', 421,
        'bootstrarray', 422,
        'hlllist', 423,
        'hllhash', 424,
        'attrinited', 425,
        'setcontspec', 426,
        'existspos', 427,
        'gethllsym', 428,
        'freshcoderef', 429,
        'markcodestatic', 430,
        'markcodestub', 431,
        'getstaticcode', 432,
        'getcodecuid', 433,
        'copy_f', 434,
        'append_f', 435,
        'rename_f', 436,
        'delete_f', 437,
        'chmod_f', 438,
        'exists_f', 439,
        'mkdir', 440,
        'rmdir', 441,
        'open_dir', 442,
        'read_dir', 443,
        'close_dir', 444,
        'open_fh', 445,
        'close_fh', 446,
        'read_fhs', 447,
        'read_fhbuf', 448,
        'slurp', 449,
        'spew', 450,
        'write_fhs', 451,
        'write_fhbuf', 452,
        'seek_fh', 453,
        'lock_fh', 454,
        'unlock_fh', 455,
        'sync_fh', 456,
        'trunc_fh', 457,
        'eof_fh', 458,
        'getstdin', 459,
        'getstdout', 460,
        'getstderr', 461,
        'connect_sk', 462,
        'close_sk', 463,
        'bind_sk', 464,
        'listen_sk', 465,
        'accept_sk', 466,
        'send_sks', 467,
        'send_skbuf', 468,
        'recv_sks', 469,
        'recv_skbuf', 470,
        'getaddr_sk', 471,
        'nametoaddr', 472,
        'addrtoname', 473,
        'porttosvc', 474,
        'setencoding', 475,
        'print', 476,
        'say', 477,
        'readall_fh', 478,
        'tell_fh', 479,
        'stat', 480,
        'readline_fh', 481,
        'readlineint_fh', 482,
        'procshell', 483,
        'procshellbg', 484,
        'procrun', 485,
        'procrunbg', 486,
        'prockill', 487,
        'procwait', 488,
        'procalive', 489,
        'detach', 490,
        'daemonize', 491,
        'chdir', 492,
        'rand_i', 493,
        'rand_n', 494,
        'time_i', 495,
        'clargs', 496,
        'newthread', 497,
        'jointhread', 498,
        'time_n', 499,
        'exit', 500,
        'loadbytecode', 501,
        'getenvhash', 502,
        'compilemasttofile', 503,
        'sha1', 504,
        'createsc', 505,
        'scsetobj', 506,
        'scsetcode', 507,
        'scgetobj', 508,
        'scgethandle', 509,
        'scgetobjidx', 510,
        'scsetdesc', 511,
        'scobjcount', 512,
        'setobjsc', 513,
        'getobjsc', 514,
        'serialize', 515,
        'deserialize', 516,
        'wval', 517,
        'wval_wide', 518,
        'scwbdisable', 519,
        'scwbenable', 520,
        'pushcompsc', 521,
        'popcompsc', 522,
        'scgetdesc', 523);
}
